package edu.uiowa.icts.safeseed.domain;

import java.util.Set;
import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import javax.persistence.*;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Table;
import javax.persistence.Table;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import org.springframework.format.annotation.DateTimeFormat;
import org.hibernate.annotations.*;
import javax.persistence.CascadeType;
import edu.uiowa.icts.*;

/* Generated by Protogen - www.icts.uiowa.edu/protogen
 * @date 2011/03/03 16:15:53
*/ 

@Entity(name="edu_uiowa_icts_safeseed_domain_submission")
@Table(name = "submission", schema="safeseed")
public class Submission
{
        private Integer submissionId;
        private Integer fragLength;
        @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date dateRequested;
        private SeqFrag seqFrag;
        private Person person;
        private Seq seq;

    public Submission()    {
        this.submissionId = null;
        this.fragLength = null;
        this.dateRequested = null;
        this.seqFrag = null;
        this.person = null;
        this.seq = null;
    }

    public Submission(Integer submissionId, Integer fragLength, Date dateRequested, SeqFrag seqFrag, Person person, Seq seq)
    {
        this.submissionId = submissionId;
        this.fragLength = fragLength;
        this.dateRequested = dateRequested;
        this.seqFrag = seqFrag;
        this.person = person;
        this.seq = seq;
    }

    /*****submissionId*****/
    @javax.persistence.SequenceGenerator(  name="gen",  sequenceName="safeseed.seqnum",allocationSize=1)
    @Id
    @GeneratedValue( strategy=GenerationType.AUTO,generator="gen")
    @Column(name = "submission_id", unique = true, nullable = false)
    public Integer getSubmissionId()
    {
        return submissionId;
    }

    public void setSubmissionId(Integer submissionId)
    {
        this.submissionId = submissionId;
    }

    /*****fragLength*****/
    @Column(name = "frag_length")
    public Integer getFragLength()
    {
        return fragLength;
    }

    public void setFragLength(Integer fragLength)
    {
        this.fragLength = fragLength;
    }

    /*****dateRequested*****/
    @Column(name = "date_requested")
    public Date getDateRequested()
    {
        return dateRequested;
    }

    public void setDateRequested(Date dateRequested)
    {
        this.dateRequested = dateRequested;
    }

    public void setDateRequested(String dateRequested)
    {
        try{
        DateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
        formatter.setLenient(true);        this.dateRequested = formatter.parse(dateRequested);
        } catch (ParseException e) {e.printStackTrace();}
    }

    /*****seqFrag*****/
    @ManyToOne(fetch = FetchType.LAZY,  targetEntity=SeqFrag.class )
    @JoinColumn(name = "seq_frag_id",nullable = true)
    public SeqFrag getSeqFrag()
    {
        return seqFrag;
    }

    public void setSeqFrag(SeqFrag seqFrag)
    {
        this.seqFrag = seqFrag;
    }

    /*****person*****/
    @ManyToOne(fetch = FetchType.LAZY,  targetEntity=Person.class )
    @JoinColumn(name = "person_id",nullable = true)
    public Person getPerson()
    {
        return person;
    }

    public void setPerson(Person person)
    {
        this.person = person;
    }

    /*****seq*****/
    @ManyToOne(fetch = FetchType.LAZY,  targetEntity=Seq.class )
    @JoinColumn(name = "seq_id",nullable = true)
    public Seq getSeq()
    {
        return seq;
    }

    public void setSeq(Seq seq)
    {
        this.seq = seq;
    }


}
