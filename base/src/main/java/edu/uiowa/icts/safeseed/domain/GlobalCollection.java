package edu.uiowa.icts.safeseed.domain;

import java.util.Set;
import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import javax.persistence.*;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Table;
import javax.persistence.Table;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import org.springframework.format.annotation.DateTimeFormat;
import org.hibernate.annotations.*;
import javax.persistence.CascadeType;
import edu.uiowa.icts.*;

/* Generated by Protogen - www.icts.uiowa.edu/protogen
 * @date 2011/03/03 16:15:53
*/ 

@Entity(name="edu_uiowa_icts_safeseed_domain_globalCollection")
@Table(name = "global_collection", schema="safeseed")
public class GlobalCollection
{
        private Integer personId;
        private String label;
        private String notes;
        @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date dateAdded;
        private GlobalSeq globalSeq;
        private Person person;

    public GlobalCollection()    {
        this.personId = null;
        this.label = "";
        this.notes = "";
        this.dateAdded = null;
        this.globalSeq = null;
        this.person = null;
    }

    public GlobalCollection(Integer personId, String label, String notes, Date dateAdded, GlobalSeq globalSeq, Person person)
    {
        this.personId = personId;
        this.label = label;
        this.notes = notes;
        this.dateAdded = dateAdded;
        this.globalSeq = globalSeq;
        this.person = person;
    }

    /*****personId*****/
    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "person"))
    @Id
    @GeneratedValue(generator="generator")
    @Column(name = "person_id", unique = true, nullable = false)
    public Integer getPersonId()
    {
        return personId;
    }

    public void setPersonId(Integer personId)
    {
        this.personId = personId;
    }

    /*****label*****/
    @Column(name = "label")
    public String getLabel()
    {
        return label;
    }

    public void setLabel(String label)
    {
        this.label = label;
    }

    /*****notes*****/
    @Column(name = "notes")
    public String getNotes()
    {
        return notes;
    }

    public void setNotes(String notes)
    {
        this.notes = notes;
    }

    /*****dateAdded*****/
    @Column(name = "date_added")
    public Date getDateAdded()
    {
        return dateAdded;
    }

    public void setDateAdded(Date dateAdded)
    {
        this.dateAdded = dateAdded;
    }

    public void setDateAdded(String dateAdded)
    {
        try{
        DateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
        formatter.setLenient(true);        this.dateAdded = formatter.parse(dateAdded);
        } catch (ParseException e) {e.printStackTrace();}
    }

    /*****globalSeq*****/
    @ManyToOne(fetch = FetchType.LAZY,  targetEntity=GlobalSeq.class )
    @JoinColumn(name = "global_seq_id",nullable = true)
    public GlobalSeq getGlobalSeq()
    {
        return globalSeq;
    }

    public void setGlobalSeq(GlobalSeq globalSeq)
    {
        this.globalSeq = globalSeq;
    }

    /*****person*****/
    @ManyToOne(fetch = FetchType.LAZY,  targetEntity=Person.class)
    @PrimaryKeyJoinColumn
    public Person getPerson()
    {
        return person;
    }

    public void setPerson(Person person)
    {
        this.person = person;
    }


}
